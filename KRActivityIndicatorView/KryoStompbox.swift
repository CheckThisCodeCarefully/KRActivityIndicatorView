//
//  KryoStompbox.swift
//  Kryo
//
//  Created by Henry Serrano on 12/23/16.
//  Copyright Â© 2016 Industrias Vanderdroid SAPI de CV. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import Cocoa

public class KryoStompbox : NSObject {

    //// Drawing Methods

    public dynamic class func drawCanvas1(frame: NSRect = NSRect(x: 0, y: 0, width: 600, height: 1100), ledColor: NSColor = NSColor(calibratedRed: 0.812, green: 0.086, blue: 0.286, alpha: 1), midKPink: NSColor = NSColor(calibratedRed: 0.855, green: 0.302, blue: 0.486, alpha: 1), knob1_Text: String = "Rate", knob2_Text: String = "Depth", knob3_Text: String = "EQ", knob4_Text: String = "Volume", knobs_TextSize: CGFloat = 30, enclosureRadius: CGFloat = 30) {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        //let color2 = NSColor(calibratedRed: 0.094, green: 0.094, blue: 0.094, alpha: 1)
        let kBlack = NSColor(red: 0.06, green: 0.06, blue: 0.06, alpha: 1.000)
        let color2 = NSColor.black
        let textColor = NSColor(calibratedRed: 0.812, green: 0.086, blue: 0.286, alpha: 1)

        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = ledColor
        shadow.shadowOffset = NSSize(width: 0, height: 0)
        shadow.shadowBlurRadius = 50
        let shadow2 = NSShadow()
        shadow2.shadowColor = midKPink
        shadow2.shadowOffset = NSSize(width: 0, height: 0)
        shadow2.shadowBlurRadius = 20


        //// Subframes
        let frame2 = NSRect(x: frame.minX + fastFloor(frame.width * 0.33500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20364 + 0.5), width: fastFloor(frame.width * 0.66667 + 0.5) - fastFloor(frame.width * 0.33500 + 0.5), height: fastFloor(frame.height * 0.42273 + 0.5) - fastFloor(frame.height * 0.20364 + 0.5))


        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(roundedRect: NSRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 1.00000 + 0.5) - fastFloor(frame.width * 0.00000 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)), xRadius: enclosureRadius, yRadius: enclosureRadius)
        color2.setFill()
        rectanglePath.fill()


        //// Oval Drawing
        let ovalPath = NSBezierPath(ovalIn: NSRect(x: frame.minX + fastFloor(frame.width * 0.11667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.74545 + 0.5), width: fastFloor(frame.width * 0.41667 + 0.5) - fastFloor(frame.width * 0.11667 + 0.5), height: fastFloor(frame.height * 0.90909 + 0.5) - fastFloor(frame.height * 0.74545 + 0.5)))
        //NSColor.black.setFill()
        kBlack.setFill()
        ovalPath.fill()
        //NSColor.black.setStroke()
        kBlack.setStroke()
        ovalPath.lineWidth = 1
        ovalPath.stroke()


        //// Oval 2 Drawing
        let oval2Path = NSBezierPath(ovalIn: NSRect(x: frame.minX + fastFloor(frame.width * 0.58333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.74545 + 0.5), width: fastFloor(frame.width * 0.88333 + 0.5) - fastFloor(frame.width * 0.58333 + 0.5), height: fastFloor(frame.height * 0.90909 + 0.5) - fastFloor(frame.height * 0.74545 + 0.5)))
        //NSColor.black.setFill()
        kBlack.setFill()
        oval2Path.fill()
        //NSColor.black.setStroke()
        kBlack.setStroke()
        oval2Path.lineWidth = 1
        oval2Path.stroke()


        //// Oval 3 Drawing
        let oval3Path = NSBezierPath(ovalIn: NSRect(x: frame.minX + fastFloor(frame.width * 0.11667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.49091 + 0.5), width: fastFloor(frame.width * 0.41667 + 0.5) - fastFloor(frame.width * 0.11667 + 0.5), height: fastFloor(frame.height * 0.65455 + 0.5) - fastFloor(frame.height * 0.49091 + 0.5)))
        //NSColor.black.setFill()
        kBlack.setFill()
        oval3Path.fill()
        //NSColor.black.setStroke()
        kBlack.setStroke()
        oval3Path.lineWidth = 1
        oval3Path.stroke()


        //// Oval 4 Drawing
        let oval4Path = NSBezierPath(ovalIn: NSRect(x: frame.minX + fastFloor(frame.width * 0.58333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.49091 + 0.5), width: fastFloor(frame.width * 0.88333 + 0.5) - fastFloor(frame.width * 0.58333 + 0.5), height: fastFloor(frame.height * 0.65455 + 0.5) - fastFloor(frame.height * 0.49091 + 0.5)))
        //NSColor.black.setFill()
        kBlack.setFill()
        oval4Path.fill()
        //NSColor.black.setStroke()
        kBlack.setStroke()
        oval4Path.lineWidth = 1
        oval4Path.stroke()


        //// Oval 5 Drawing
        let oval5Path = NSBezierPath(ovalIn: NSRect(x: frame.minX + fastFloor(frame.width * 0.37583) + 0.5, y: frame.minY + fastFloor(frame.height * 0.03682) + 0.5, width: fastFloor(frame.width * 0.62583) - fastFloor(frame.width * 0.37583), height: fastFloor(frame.height * 0.17318) - fastFloor(frame.height * 0.03682)))
        NSColor.gray.setFill()
        oval5Path.fill()
        NSColor.lightGray.setStroke()
        oval5Path.lineWidth = 5
        oval5Path.stroke()


        //// Oval 6 Drawing
        let oval6Path = NSBezierPath(ovalIn: NSRect(x: frame.minX + fastFloor(frame.width * 0.44208 + 0.25) + 0.25, y: frame.minY + fastFloor(frame.height * 0.66386 + 0.25) + 0.25, width: fastFloor(frame.width * 0.55875 + 0.25) - fastFloor(frame.width * 0.44208 + 0.25), height: fastFloor(frame.height * 0.72750 + 0.25) - fastFloor(frame.height * 0.66386 + 0.25)))
        NSGraphicsContext.saveGraphicsState()
        shadow.set()
        color2.setFill()
        oval6Path.fill()
        NSGraphicsContext.restoreGraphicsState()

        NSColor.black.setStroke()
        oval6Path.lineWidth = 0.5
        oval6Path.stroke()


        //// Text Drawing
        let textRect = NSRect(x: frame.minX + fastFloor(frame.width * 0.11667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.66364 + 0.5), width: fastFloor(frame.width * 0.40833 + 0.5) - fastFloor(frame.width * 0.11667 + 0.5), height: fastFloor(frame.height * 0.73636 + 0.5) - fastFloor(frame.height * 0.66364 + 0.5))
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .center
        let textFontAttributes = [NSFontAttributeName: NSFont(name: "Audiowide-Regular", size: knobs_TextSize)!, NSForegroundColorAttributeName: textColor, NSParagraphStyleAttributeName: textStyle]

        knob1_Text.draw(in: textRect, withAttributes: textFontAttributes)


        //// Text 2 Drawing
        let text2Rect = NSRect(x: frame.minX + fastFloor(frame.width * 0.60000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.66364 + 0.5), width: fastFloor(frame.width * 0.86667 + 0.5) - fastFloor(frame.width * 0.60000 + 0.5), height: fastFloor(frame.height * 0.73636 + 0.5) - fastFloor(frame.height * 0.66364 + 0.5))
        let text2Style = NSMutableParagraphStyle()
        text2Style.alignment = .center
        let text2FontAttributes = [NSFontAttributeName: NSFont(name: "Audiowide-Regular", size: knobs_TextSize)!, NSForegroundColorAttributeName: textColor, NSParagraphStyleAttributeName: text2Style]

        knob2_Text.draw(in: text2Rect, withAttributes: text2FontAttributes)


        //// Text 3 Drawing
        let text3Rect = NSRect(x: frame.minX + fastFloor(frame.width * 0.13333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40909 + 0.5), width: fastFloor(frame.width * 0.40000 + 0.5) - fastFloor(frame.width * 0.13333 + 0.5), height: fastFloor(frame.height * 0.48182 + 0.5) - fastFloor(frame.height * 0.40909 + 0.5))
        let text3Style = NSMutableParagraphStyle()
        text3Style.alignment = .center
        let text3FontAttributes = [NSFontAttributeName: NSFont(name: "Audiowide-Regular", size: knobs_TextSize)!, NSForegroundColorAttributeName: textColor, NSParagraphStyleAttributeName: text3Style]

        knob3_Text.draw(in: text3Rect, withAttributes: text3FontAttributes)


        //// Text 4 Drawing
        let text4Rect = NSRect(x: frame.minX + fastFloor(frame.width * 0.60000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40909 + 0.5), width: fastFloor(frame.width * 0.86667 + 0.5) - fastFloor(frame.width * 0.60000 + 0.5), height: fastFloor(frame.height * 0.48182 + 0.5) - fastFloor(frame.height * 0.40909 + 0.5))
        let text4Style = NSMutableParagraphStyle()
        text4Style.alignment = .center
        let text4FontAttributes = [NSFontAttributeName: NSFont(name: "Audiowide-Regular", size: knobs_TextSize)!, NSForegroundColorAttributeName: textColor, NSParagraphStyleAttributeName: text4Style]

        knob4_Text.draw(in: text4Rect, withAttributes: text4FontAttributes)


        //// Rectangle 20 Drawing
        let rectangle20Path = NSBezierPath(rect: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.31294 + 0.22) + 0.28, y: frame2.minY + fastFloor(frame2.height * 0.49056 + 0.28) + 0.22, width: fastFloor(frame2.width * 0.38455 - 0.03) - fastFloor(frame2.width * 0.31294 + 0.22) + 0.25, height: fastFloor(frame2.height * 0.88205 - 0.07) - fastFloor(frame2.height * 0.49056 + 0.28) + 0.35))
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        rectangle20Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Oval 25 Drawing
        let oval25Path = NSBezierPath(ovalIn: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.31281 + 0.25) + 0.25, y: frame2.minY + fastFloor(frame2.height * 0.85332 - 0.15) + 0.65, width: fastFloor(frame2.width * 0.38417 + 0.05) - fastFloor(frame2.width * 0.31281 + 0.25) + 0.2, height: fastFloor(frame2.height * 0.91224 - 0.35) - fastFloor(frame2.height * 0.85332 - 0.15) + 0.2))
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        oval25Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Oval 26 Drawing
        let oval26Path = NSBezierPath(ovalIn: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.31281 + 0.25) + 0.25, y: frame2.minY + fastFloor(frame2.height * 0.46183 + 0.2) + 0.3, width: fastFloor(frame2.width * 0.38417 + 0.05) - fastFloor(frame2.width * 0.31281 + 0.25) + 0.2, height: fastFloor(frame2.height * 0.52490) - fastFloor(frame2.height * 0.46183 + 0.2) + 0.2))
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        oval26Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 128 Drawing
        let bezier128Path = NSBezierPath()
        bezier128Path.move(to: NSPoint(x: frame2.minX + 0.84698 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63394 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63407 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.64943 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.83232 * frame2.width, y: frame2.minY + 0.66177 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.79631 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.64943 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63407 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63394 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.78164 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.78164 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78194 * frame2.width, y: frame2.minY + 0.72429 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.79644 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.83218 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84668 * frame2.width, y: frame2.minY + 0.72429 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.84698 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.84698 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier128Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier128Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 129 Drawing
        let bezier129Path = NSBezierPath()
        bezier129Path.move(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.79644 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78194 * frame2.width, y: frame2.minY + 0.72429 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.73971 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.73947 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.73959 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.76726 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.75492 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.79631 * frame2.width, y: frame2.minY + 0.76726 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.73971 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.83232 * frame2.width, y: frame2.minY + 0.76726 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.75492 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.73959 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.73947 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84668 * frame2.width, y: frame2.minY + 0.72429 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.83218 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier129Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier129Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 130 Drawing
        let bezier130Path = NSBezierPath()
        bezier130Path.move(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.60665 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.79647 * frame2.width, y: frame2.minY + 0.60665 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78197 * frame2.width, y: frame2.minY + 0.61877 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63394 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63407 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.64943 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.79631 * frame2.width, y: frame2.minY + 0.66177 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.83232 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.64943 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63407 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63394 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.60665 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84666 * frame2.width, y: frame2.minY + 0.61877 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.83216 * frame2.width, y: frame2.minY + 0.60665 * frame2.height))
        bezier130Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier130Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 131 Drawing
        let bezier131Path = NSBezierPath()
        bezier131Path.move(to: NSPoint(x: frame2.minX + 0.53307 * frame2.width, y: frame2.minY + 0.39998 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.39998 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40038 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40011 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40025 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.42794 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.41560 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.51841 * frame2.width, y: frame2.minY + 0.42794 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40038 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.48240 * frame2.width, y: frame2.minY + 0.42794 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.41560 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.39998 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40025 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40011 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.46774 * frame2.width, y: frame2.minY + 0.39998 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.46774 * frame2.width, y: frame2.minY + 0.97318 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.97318 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.94597 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46801 * frame2.width, y: frame2.minY + 0.95812 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.48253 * frame2.width, y: frame2.minY + 0.94597 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.97318 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.51827 * frame2.width, y: frame2.minY + 0.94597 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53278 * frame2.width, y: frame2.minY + 0.95812 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.53307 * frame2.width, y: frame2.minY + 0.97318 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.53307 * frame2.width, y: frame2.minY + 0.39998 * frame2.height))
        bezier131Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier131Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 132 Drawing
        let bezier132Path = NSBezierPath()
        bezier132Path.move(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.94597 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.97318 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.48253 * frame2.width, y: frame2.minY + 0.94597 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46801 * frame2.width, y: frame2.minY + 0.95812 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.97353 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.97329 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.97341 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.50176 * frame2.width, y: frame2.minY + 0.99882 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.98875 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.48370 * frame2.width, y: frame2.minY + 0.99882 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.97353 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.51981 * frame2.width, y: frame2.minY + 0.99882 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.98875 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.97318 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.97341 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.97329 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.94597 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53278 * frame2.width, y: frame2.minY + 0.95812 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.51827 * frame2.width, y: frame2.minY + 0.94597 * frame2.height))
        bezier132Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier132Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 133 Drawing
        let bezier133Path = NSBezierPath()
        bezier133Path.move(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.37282 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.39998 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.48256 * frame2.width, y: frame2.minY + 0.37282 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46806 * frame2.width, y: frame2.minY + 0.38494 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40038 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40011 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40025 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.42794 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.41560 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.48240 * frame2.width, y: frame2.minY + 0.42794 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40038 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.51841 * frame2.width, y: frame2.minY + 0.42794 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.41560 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.39998 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40025 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40011 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.37282 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53275 * frame2.width, y: frame2.minY + 0.38494 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.51825 * frame2.width, y: frame2.minY + 0.37282 * frame2.height))
        bezier133Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier133Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Rectangle 21 Drawing
        let rectangle21Path = NSBezierPath(rect: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.61746 - 0.38) + 0.88, y: frame2.minY + fastFloor(frame2.height * 0.49056 + 0.28) + 0.22, width: fastFloor(frame2.width * 0.68907 + 0.38) - fastFloor(frame2.width * 0.61746 - 0.38) - 0.75, height: fastFloor(frame2.height * 0.88205 - 0.07) - fastFloor(frame2.height * 0.49056 + 0.28) + 0.35))
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        rectangle21Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Oval 27 Drawing
        let oval27Path = NSBezierPath(ovalIn: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.61759 - 0.4) + 0.9, y: frame2.minY + fastFloor(frame2.height * 0.85332 - 0.15) + 0.65, width: fastFloor(frame2.width * 0.68894 + 0.4) - fastFloor(frame2.width * 0.61759 - 0.4) - 0.8, height: fastFloor(frame2.height * 0.91224 - 0.35) - fastFloor(frame2.height * 0.85332 - 0.15) + 0.2))
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        oval27Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Oval 28 Drawing
        let oval28Path = NSBezierPath(ovalIn: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.61759 - 0.4) + 0.9, y: frame2.minY + fastFloor(frame2.height * 0.46183 + 0.2) + 0.3, width: fastFloor(frame2.width * 0.68894 + 0.4) - fastFloor(frame2.width * 0.61759 - 0.4) - 0.8, height: fastFloor(frame2.height * 0.52490) - fastFloor(frame2.height * 0.46183 + 0.2) + 0.2))
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        oval28Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 134 Drawing
        let bezier134Path = NSBezierPath()
        bezier134Path.move(to: NSPoint(x: frame2.minX + 0.21892 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63394 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63407 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.64943 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.20426 * frame2.width, y: frame2.minY + 0.66177 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.16825 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.64943 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63407 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63394 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.15358 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.15358 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15385 * frame2.width, y: frame2.minY + 0.72429 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.16838 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.20412 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21863 * frame2.width, y: frame2.minY + 0.72429 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.21892 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.21892 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier134Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier134Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 135 Drawing
        let bezier135Path = NSBezierPath()
        bezier135Path.move(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.16838 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15385 * frame2.width, y: frame2.minY + 0.72429 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.73971 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.73947 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.73959 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.76726 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.75492 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.16825 * frame2.width, y: frame2.minY + 0.76726 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.73971 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.20426 * frame2.width, y: frame2.minY + 0.76726 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.75492 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.73959 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.73947 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21863 * frame2.width, y: frame2.minY + 0.72429 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.20412 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier135Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier135Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 136 Drawing
        let bezier136Path = NSBezierPath()
        bezier136Path.move(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.60665 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.16841 * frame2.width, y: frame2.minY + 0.60665 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15391 * frame2.width, y: frame2.minY + 0.61877 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63394 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63407 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.64943 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.16825 * frame2.width, y: frame2.minY + 0.66177 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.20426 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.64943 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63407 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63394 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.60665 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21860 * frame2.width, y: frame2.minY + 0.61877 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.20410 * frame2.width, y: frame2.minY + 0.60665 * frame2.height))
        bezier136Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier136Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 137 Drawing
        let bezier137Path = NSBezierPath()
        bezier137Path.move(to: NSPoint(x: frame2.minX + 0.28129 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.36685 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.39191 * frame2.width, y: frame2.minY + 0.22689 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.49232 * frame2.width, y: frame2.minY + 0.22689 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.49930 * frame2.width, y: frame2.minY + 0.26931 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.31337 * frame2.width, y: frame2.minY + 0.26931 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.28129 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier137Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier137Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 138 Drawing
        let bezier138Path = NSBezierPath()
        bezier138Path.move(to: NSPoint(x: frame2.minX + 0.29677 * frame2.width, y: frame2.minY + 0.26892 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.20984 * frame2.width, y: frame2.minY + 0.26892 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.12154 * frame2.width, y: frame2.minY + 0.18015 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.09968 * frame2.width, y: frame2.minY + 0.18015 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.11456 * frame2.width, y: frame2.minY + 0.26892 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.03229 * frame2.width, y: frame2.minY + 0.26892 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.00022 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.08248 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.09412 * frame2.width, y: frame2.minY + 0.14637 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.11550 * frame2.width, y: frame2.minY + 0.14637 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.17916 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.26747 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.18987 * frame2.width, y: frame2.minY + 0.16326 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.29677 * frame2.width, y: frame2.minY + 0.26892 * frame2.height))
        bezier138Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier138Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 139 Drawing
        let bezier139Path = NSBezierPath()
        bezier139Path.move(to: NSPoint(x: frame2.minX + 0.91437 * frame2.width, y: frame2.minY + 0.16801 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.86741 * frame2.width, y: frame2.minY + 0.10556 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.90647 * frame2.width, y: frame2.minY + 0.11656 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.90135 * frame2.width, y: frame2.minY + 0.10556 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.84186 * frame2.width, y: frame2.minY + 0.16801 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.83394 * frame2.width, y: frame2.minY + 0.10556 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.83348 * frame2.width, y: frame2.minY + 0.11656 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.88739 * frame2.width, y: frame2.minY + 0.23166 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.85022 * frame2.width, y: frame2.minY + 0.21987 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.85439 * frame2.width, y: frame2.minY + 0.23166 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.91437 * frame2.width, y: frame2.minY + 0.16801 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.92132 * frame2.width, y: frame2.minY + 0.23166 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.92364 * frame2.width, y: frame2.minY + 0.22144 * frame2.height))
        bezier139Path.close()
        bezier139Path.move(to: NSPoint(x: frame2.minX + 0.89391 * frame2.width, y: frame2.minY + 0.26976 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.75911 * frame2.width, y: frame2.minY + 0.16801 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.79259 * frame2.width, y: frame2.minY + 0.26976 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.77213 * frame2.width, y: frame2.minY + 0.24854 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.86046 * frame2.width, y: frame2.minY + 0.06628 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.74658 * frame2.width, y: frame2.minY + 0.08946 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.75774 * frame2.width, y: frame2.minY + 0.06628 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.99617 * frame2.width, y: frame2.minY + 0.16801 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.96361 * frame2.width, y: frame2.minY + 0.06628 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.98361 * frame2.width, y: frame2.minY + 0.08907 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.89391 * frame2.width, y: frame2.minY + 0.26976 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 1.00916 * frame2.width, y: frame2.minY + 0.24697 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.99617 * frame2.width, y: frame2.minY + 0.26976 * frame2.height))
        bezier139Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier139Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 140 Drawing
        let bezier140Path = NSBezierPath()
        bezier140Path.move(to: NSPoint(x: frame2.minX + 0.69760 * frame2.width, y: frame2.minY + 0.26932 * frame2.height))
        bezier140Path.line(to: NSPoint(x: frame2.minX + 0.58461 * frame2.width, y: frame2.minY + 0.06445 * frame2.height))
        bezier140Path.line(to: NSPoint(x: frame2.minX + 0.54970 * frame2.width, y: frame2.minY + 0.00118 * frame2.height))
        bezier140Path.line(to: NSPoint(x: frame2.minX + 0.62341 * frame2.width, y: frame2.minY + 0.00118 * frame2.height))
        bezier140Path.line(to: NSPoint(x: frame2.minX + 0.78291 * frame2.width, y: frame2.minY + 0.26932 * frame2.height))
        bezier140Path.line(to: NSPoint(x: frame2.minX + 0.69760 * frame2.width, y: frame2.minY + 0.26932 * frame2.height))
        bezier140Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier140Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 141 Drawing
        let bezier141Path = NSBezierPath()
        bezier141Path.move(to: NSPoint(x: frame2.minX + 0.58849 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.55863 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.51040 * frame2.width, y: frame2.minY + 0.26933 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.59852 * frame2.width, y: frame2.minY + 0.26933 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.62113 * frame2.width, y: frame2.minY + 0.13511 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.62156 * frame2.width, y: frame2.minY + 0.13588 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.62216 * frame2.width, y: frame2.minY + 0.13251 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.58849 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier141Path.close()
        NSGraphicsContext.saveGraphicsState()
        shadow2.set()
        color2.setFill()
        bezier141Path.fill()
        NSGraphicsContext.restoreGraphicsState()



        //// Bezier 142 Drawing
        let bezier142Path = NSBezierPath()
        bezier142Path.move(to: NSPoint(x: frame2.minX + 0.63270 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier142Path.line(to: NSPoint(x: frame2.minX + 0.58849 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier142Path.line(to: NSPoint(x: frame2.minX + 0.62216 * frame2.width, y: frame2.minY + 0.13251 * frame2.height))
        bezier142Path.line(to: NSPoint(x: frame2.minX + 0.63270 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier142Path.close()
        color2.setFill()
        bezier142Path.fill()


        //// Rectangle 2 Drawing
        ///let rectangle2Path = NSBezierPath(roundedRect: NSRect(x: frame.minX + fastFloor(frame.width * 0.26666 - 0.5) + 1, y: frame.minY + fastFloor(frame.height * 0.82773) + 0.5, width: fastFloor(frame.width * 0.26833 - 0.5) - fastFloor(frame.width * 0.26666 - 0.5), height: fastFloor(frame.height * 0.90364 + 0.5) - fastFloor(frame.height * 0.82773) - 0.5), xRadius: 0.5, yRadius: 0.5)
        let rectangle2Path = NSBezierPath(roundedRect: NSRect(x: frame.minX + fastFloor(frame.width * 0.26666 - 0.5) + 1, y: frame.minY + fastFloor(frame.height * 0.82773) + 0.5, width: 1.0, height: fastFloor(frame.height * 0.90364 + 0.5) - fastFloor(frame.height * 0.82773) - 0.5), xRadius: 0.5, yRadius: 0.5)
        NSColor.white.setFill()
        rectangle2Path.fill()
        NSColor.white.setStroke()
        rectangle2Path.lineWidth = 4.0
        rectangle2Path.lineCapStyle = .roundLineCapStyle
        rectangle2Path.lineJoinStyle = .roundLineJoinStyle
        rectangle2Path.stroke()


        //// Rectangle 3 Drawing
        //let rectangle3Path = NSBezierPath(roundedRect: NSRect(x: frame.minX + fastFloor(frame.width * 0.73333 - 0.5) + 1, y: frame.minY + fastFloor(frame.height * 0.82773) + 0.5, width: fastFloor(frame.width * 0.73500 - 0.5) - fastFloor(frame.width * 0.73333 - 0.5), height: fastFloor(frame.height * 0.90364 + 0.5) - fastFloor(frame.height * 0.82773) - 0.5), xRadius: 0.5, yRadius: 0.5)
        let rectangle3Path = NSBezierPath(roundedRect: NSRect(x: frame.minX + fastFloor(frame.width * 0.73333 - 0.5) + 1, y: frame.minY + fastFloor(frame.height * 0.82773) + 0.5, width: 1.0, height: fastFloor(frame.height * 0.90364 + 0.5) - fastFloor(frame.height * 0.82773) - 0.5), xRadius: 0.5, yRadius: 0.5)
        NSColor.white.setFill()
        rectangle3Path.fill()
        NSColor.white.setStroke()
        rectangle3Path.lineWidth = 4.0
        rectangle3Path.lineCapStyle = .roundLineCapStyle
        rectangle3Path.lineJoinStyle = .roundLineJoinStyle
        rectangle3Path.stroke()

        /*let widthh = fastFloor(frame.width * 0.26833 - 0.5) - fastFloor(frame.width * 0.26666 - 0.5)
        print(widthh)*/
        /*let xh = frame.minX + fastFloor(frame.width * 0.73333 - 0.5) + 1
        let yh = frame.minY + fastFloor(frame.height * 0.82773) + 0.5
        let widthh = fastFloor(frame.width * 0.73500 - 0.5) - fastFloor(frame.width * 0.73333 - 0.5)
        let heighth = fastFloor(frame.height * 0.90364 + 0.5) - fastFloor(frame.height * 0.82773) - 0.5
        print("\(xh),\(yh),\(widthh),\(heighth)")*/
        
        //// Rectangle 4 Drawing
        //let rectangle4Path = NSBezierPath(roundedRect: NSRect(x: frame.minX + fastFloor(frame.width * 0.26666 - 0.5) + 1, y: frame.minY + fastFloor(frame.height * 0.57227) + 0.5, width: fastFloor(frame.width * 0.26833 - 0.5) - fastFloor(frame.width * 0.26666 - 0.5), height: fastFloor(frame.height * 0.64818 + 0.5) - fastFloor(frame.height * 0.57227) - 0.5), xRadius: 0.5, yRadius: 0.5)
        let rectangle4Path = NSBezierPath(roundedRect: NSRect(x: frame.minX + fastFloor(frame.width * 0.26666 - 0.5) + 1, y: frame.minY + fastFloor(frame.height * 0.57227) + 0.5, width: 1.0, height: fastFloor(frame.height * 0.64818 + 0.5) - fastFloor(frame.height * 0.57227) - 0.5), xRadius: 0.5, yRadius: 0.5)
        NSColor.white.setFill()
        rectangle4Path.fill()
        NSColor.white.setStroke()
        rectangle4Path.lineWidth = 4.0
        rectangle4Path.lineCapStyle = .roundLineCapStyle
        rectangle4Path.lineJoinStyle = .roundLineJoinStyle
        rectangle4Path.stroke()


        //// Rectangle 5 Drawing
        //let rectangle5Path = NSBezierPath(roundedRect: NSRect(x: frame.minX + fastFloor(frame.width * 0.73333 - 0.5) + 1, y: frame.minY + fastFloor(frame.height * 0.57227) + 0.5, width: fastFloor(frame.width * 0.73500 - 0.5) - fastFloor(frame.width * 0.73333 - 0.5), height: fastFloor(frame.height * 0.64818 + 0.5) - fastFloor(frame.height * 0.57227) - 0.5), xRadius: 0.5, yRadius: 0.5)
        let rectangle5Path = NSBezierPath(roundedRect: NSRect(x: frame.minX + fastFloor(frame.width * 0.73333 - 0.5) + 1, y: frame.minY + fastFloor(frame.height * 0.57227) + 0.5, width: 1.0, height: fastFloor(frame.height * 0.64818 + 0.5) - fastFloor(frame.height * 0.57227) - 0.5), xRadius: 0.5, yRadius: 0.5)
        NSColor.white.setFill()
        rectangle5Path.fill()
        NSColor.white.setStroke()
        rectangle5Path.lineWidth = 4.0
        rectangle5Path.lineCapStyle = .roundLineCapStyle
        rectangle5Path.lineJoinStyle = .roundLineJoinStyle
        rectangle5Path.stroke()


        //// Oval 7 Drawing
        let oval7Path = NSBezierPath(ovalIn: NSRect(x: frame.minX + fastFloor(frame.width * 0.42208 + 0.25) + 0.25, y: frame.minY + fastFloor(frame.height * 0.06205 + 0.25) + 0.25, width: fastFloor(frame.width * 0.58042 + 0.25) - fastFloor(frame.width * 0.42208 + 0.25), height: fastFloor(frame.height * 0.14841 + 0.25) - fastFloor(frame.height * 0.06205 + 0.25)))
        NSColor.lightGray.setFill()
        oval7Path.fill()
        NSColor.lightGray.setStroke()
        oval7Path.lineWidth = 0.5
        oval7Path.stroke()
    }

    public dynamic class func drawCanvas3(frame: NSRect = NSRect(x: 0, y: 0, width: 600, height: 1100), ledColor: NSColor = NSColor(calibratedRed: 0.812, green: 0.086, blue: 0.286, alpha: 1), midKPink: NSColor = NSColor(calibratedRed: 0.855, green: 0.302, blue: 0.486, alpha: 1), darkKPink: NSColor = NSColor(calibratedRed: 0.812, green: 0.086, blue: 0.286, alpha: 1)) {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Subframes
        let frame2 = NSRect(x: frame.minX + fastFloor(frame.width * 0.33500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20364 + 0.5), width: fastFloor(frame.width * 0.66667 + 0.5) - fastFloor(frame.width * 0.33500 + 0.5), height: fastFloor(frame.height * 0.42273 + 0.5) - fastFloor(frame.height * 0.20364 + 0.5))


        //// Oval 6 Drawing
        let oval6Path = NSBezierPath(ovalIn: NSRect(x: frame.minX + fastFloor(frame.width * 0.44208 + 0.25) + 0.25, y: frame.minY + fastFloor(frame.height * 0.66386 + 0.25) + 0.25, width: fastFloor(frame.width * 0.55875 + 0.25) - fastFloor(frame.width * 0.44208 + 0.25), height: fastFloor(frame.height * 0.72750 + 0.25) - fastFloor(frame.height * 0.66386 + 0.25)))
        ledColor.setFill()
        oval6Path.fill()
        NSColor.black.setStroke()
        oval6Path.lineWidth = 0.5
        oval6Path.stroke()


        //// Rectangle 20 Drawing
        let rectangle20Path = NSBezierPath(rect: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.31294 + 0.22) + 0.28, y: frame2.minY + fastFloor(frame2.height * 0.49056 + 0.28) + 0.22, width: fastFloor(frame2.width * 0.38455 - 0.03) - fastFloor(frame2.width * 0.31294 + 0.22) + 0.25, height: fastFloor(frame2.height * 0.88205 - 0.07) - fastFloor(frame2.height * 0.49056 + 0.28) + 0.35))
        darkKPink.setFill()
        rectangle20Path.fill()


        //// Oval 25 Drawing
        let oval25Path = NSBezierPath(ovalIn: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.31281 + 0.25) + 0.25, y: frame2.minY + fastFloor(frame2.height * 0.85332 - 0.15) + 0.65, width: fastFloor(frame2.width * 0.38417 + 0.05) - fastFloor(frame2.width * 0.31281 + 0.25) + 0.2, height: fastFloor(frame2.height * 0.91224 - 0.35) - fastFloor(frame2.height * 0.85332 - 0.15) + 0.2))
        darkKPink.setFill()
        oval25Path.fill()


        //// Oval 26 Drawing
        let oval26Path = NSBezierPath(ovalIn: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.31281 + 0.25) + 0.25, y: frame2.minY + fastFloor(frame2.height * 0.46183 + 0.2) + 0.3, width: fastFloor(frame2.width * 0.38417 + 0.05) - fastFloor(frame2.width * 0.31281 + 0.25) + 0.2, height: fastFloor(frame2.height * 0.52490) - fastFloor(frame2.height * 0.46183 + 0.2) + 0.2))
        darkKPink.setFill()
        oval26Path.fill()


        //// Bezier 128 Drawing
        let bezier128Path = NSBezierPath()
        bezier128Path.move(to: NSPoint(x: frame2.minX + 0.84698 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63394 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63407 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.64943 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.83232 * frame2.width, y: frame2.minY + 0.66177 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.79631 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.64943 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63407 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63394 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.78164 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.78164 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78194 * frame2.width, y: frame2.minY + 0.72429 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.79644 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier128Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.83218 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84668 * frame2.width, y: frame2.minY + 0.72429 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.84698 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier128Path.line(to: NSPoint(x: frame2.minX + 0.84698 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier128Path.close()
        midKPink.setFill()
        bezier128Path.fill()


        //// Bezier 129 Drawing
        let bezier129Path = NSBezierPath()
        bezier129Path.move(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.79644 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78194 * frame2.width, y: frame2.minY + 0.72429 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.73971 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.73947 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.73959 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.76726 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.75492 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.79631 * frame2.width, y: frame2.minY + 0.76726 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.73971 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.83232 * frame2.width, y: frame2.minY + 0.76726 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.75492 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.73959 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.73947 * frame2.height))
        bezier129Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84668 * frame2.width, y: frame2.minY + 0.72429 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.83218 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier129Path.close()
        midKPink.setFill()
        bezier129Path.fill()


        //// Bezier 130 Drawing
        let bezier130Path = NSBezierPath()
        bezier130Path.move(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.60665 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.79647 * frame2.width, y: frame2.minY + 0.60665 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78197 * frame2.width, y: frame2.minY + 0.61877 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63394 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.63407 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.78170 * frame2.width, y: frame2.minY + 0.64943 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.79631 * frame2.width, y: frame2.minY + 0.66177 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.83232 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.64943 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63407 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.84693 * frame2.width, y: frame2.minY + 0.63394 * frame2.height))
        bezier130Path.curve(to: NSPoint(x: frame2.minX + 0.81431 * frame2.width, y: frame2.minY + 0.60665 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.84666 * frame2.width, y: frame2.minY + 0.61877 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.83216 * frame2.width, y: frame2.minY + 0.60665 * frame2.height))
        bezier130Path.close()
        midKPink.setFill()
        bezier130Path.fill()


        //// Bezier 131 Drawing
        let bezier131Path = NSBezierPath()
        bezier131Path.move(to: NSPoint(x: frame2.minX + 0.53307 * frame2.width, y: frame2.minY + 0.39998 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.39998 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40038 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40011 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40025 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.42794 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.41560 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.51841 * frame2.width, y: frame2.minY + 0.42794 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40038 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.48240 * frame2.width, y: frame2.minY + 0.42794 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.41560 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.39998 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40025 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40011 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.46774 * frame2.width, y: frame2.minY + 0.39998 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.46774 * frame2.width, y: frame2.minY + 0.97318 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.97318 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.94597 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46801 * frame2.width, y: frame2.minY + 0.95812 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.48253 * frame2.width, y: frame2.minY + 0.94597 * frame2.height))
        bezier131Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.97318 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.51827 * frame2.width, y: frame2.minY + 0.94597 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53278 * frame2.width, y: frame2.minY + 0.95812 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.53307 * frame2.width, y: frame2.minY + 0.97318 * frame2.height))
        bezier131Path.line(to: NSPoint(x: frame2.minX + 0.53307 * frame2.width, y: frame2.minY + 0.39998 * frame2.height))
        bezier131Path.close()
        midKPink.setFill()
        bezier131Path.fill()


        //// Bezier 132 Drawing
        let bezier132Path = NSBezierPath()
        bezier132Path.move(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.94597 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.97318 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.48253 * frame2.width, y: frame2.minY + 0.94597 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46801 * frame2.width, y: frame2.minY + 0.95812 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.97353 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.97329 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.97341 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.50176 * frame2.width, y: frame2.minY + 0.99882 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.98875 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.48370 * frame2.width, y: frame2.minY + 0.99882 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.97353 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.51981 * frame2.width, y: frame2.minY + 0.99882 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.98875 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.97318 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.97341 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.97329 * frame2.height))
        bezier132Path.curve(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.94597 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53278 * frame2.width, y: frame2.minY + 0.95812 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.51827 * frame2.width, y: frame2.minY + 0.94597 * frame2.height))
        bezier132Path.close()
        midKPink.setFill()
        bezier132Path.fill()


        //// Bezier 133 Drawing
        let bezier133Path = NSBezierPath()
        bezier133Path.move(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.37282 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.39998 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.48256 * frame2.width, y: frame2.minY + 0.37282 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46806 * frame2.width, y: frame2.minY + 0.38494 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40038 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40011 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.40025 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.42794 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.46779 * frame2.width, y: frame2.minY + 0.41560 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.48240 * frame2.width, y: frame2.minY + 0.42794 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40038 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.51841 * frame2.width, y: frame2.minY + 0.42794 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.41560 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.39998 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40025 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.53302 * frame2.width, y: frame2.minY + 0.40011 * frame2.height))
        bezier133Path.curve(to: NSPoint(x: frame2.minX + 0.50040 * frame2.width, y: frame2.minY + 0.37282 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.53275 * frame2.width, y: frame2.minY + 0.38494 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.51825 * frame2.width, y: frame2.minY + 0.37282 * frame2.height))
        bezier133Path.close()
        midKPink.setFill()
        bezier133Path.fill()


        //// Rectangle 21 Drawing
        let rectangle21Path = NSBezierPath(rect: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.61746 - 0.38) + 0.88, y: frame2.minY + fastFloor(frame2.height * 0.49056 + 0.28) + 0.22, width: fastFloor(frame2.width * 0.68907 + 0.38) - fastFloor(frame2.width * 0.61746 - 0.38) - 0.75, height: fastFloor(frame2.height * 0.88205 - 0.07) - fastFloor(frame2.height * 0.49056 + 0.28) + 0.35))
        darkKPink.setFill()
        rectangle21Path.fill()


        //// Oval 27 Drawing
        let oval27Path = NSBezierPath(ovalIn: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.61759 - 0.4) + 0.9, y: frame2.minY + fastFloor(frame2.height * 0.85332 - 0.15) + 0.65, width: fastFloor(frame2.width * 0.68894 + 0.4) - fastFloor(frame2.width * 0.61759 - 0.4) - 0.8, height: fastFloor(frame2.height * 0.91224 - 0.35) - fastFloor(frame2.height * 0.85332 - 0.15) + 0.2))
        darkKPink.setFill()
        oval27Path.fill()


        //// Oval 28 Drawing
        let oval28Path = NSBezierPath(ovalIn: NSRect(x: frame2.minX + fastFloor(frame2.width * 0.61759 - 0.4) + 0.9, y: frame2.minY + fastFloor(frame2.height * 0.46183 + 0.2) + 0.3, width: fastFloor(frame2.width * 0.68894 + 0.4) - fastFloor(frame2.width * 0.61759 - 0.4) - 0.8, height: fastFloor(frame2.height * 0.52490) - fastFloor(frame2.height * 0.46183 + 0.2) + 0.2))
        darkKPink.setFill()
        oval28Path.fill()


        //// Bezier 134 Drawing
        let bezier134Path = NSBezierPath()
        bezier134Path.move(to: NSPoint(x: frame2.minX + 0.21892 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63394 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63407 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.64943 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.20426 * frame2.width, y: frame2.minY + 0.66177 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.16825 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.64943 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63407 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63394 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.15358 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.15358 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15385 * frame2.width, y: frame2.minY + 0.72429 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.16838 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier134Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.20412 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21863 * frame2.width, y: frame2.minY + 0.72429 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.21892 * frame2.width, y: frame2.minY + 0.73935 * frame2.height))
        bezier134Path.line(to: NSPoint(x: frame2.minX + 0.21892 * frame2.width, y: frame2.minY + 0.63380 * frame2.height))
        bezier134Path.close()
        midKPink.setFill()
        bezier134Path.fill()


        //// Bezier 135 Drawing
        let bezier135Path = NSBezierPath()
        bezier135Path.move(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.16838 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15385 * frame2.width, y: frame2.minY + 0.72429 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.73971 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.73947 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.73959 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.76726 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.75492 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.16825 * frame2.width, y: frame2.minY + 0.76726 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.73971 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.20426 * frame2.width, y: frame2.minY + 0.76726 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.75492 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.73935 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.73959 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.73947 * frame2.height))
        bezier135Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.71214 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21863 * frame2.width, y: frame2.minY + 0.72429 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.20412 * frame2.width, y: frame2.minY + 0.71214 * frame2.height))
        bezier135Path.close()
        midKPink.setFill()
        bezier135Path.fill()


        //// Bezier 136 Drawing
        let bezier136Path = NSBezierPath()
        bezier136Path.move(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.60665 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.16841 * frame2.width, y: frame2.minY + 0.60665 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15391 * frame2.width, y: frame2.minY + 0.61877 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63394 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.63407 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.15364 * frame2.width, y: frame2.minY + 0.64943 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.16825 * frame2.width, y: frame2.minY + 0.66177 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63421 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.20426 * frame2.width, y: frame2.minY + 0.66177 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.64943 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63380 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63407 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.21887 * frame2.width, y: frame2.minY + 0.63394 * frame2.height))
        bezier136Path.curve(to: NSPoint(x: frame2.minX + 0.18625 * frame2.width, y: frame2.minY + 0.60665 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.21860 * frame2.width, y: frame2.minY + 0.61877 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.20410 * frame2.width, y: frame2.minY + 0.60665 * frame2.height))
        bezier136Path.close()
        midKPink.setFill()
        bezier136Path.fill()


        //// Bezier 137 Drawing
        let bezier137Path = NSBezierPath()
        bezier137Path.move(to: NSPoint(x: frame2.minX + 0.28129 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.36685 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.39191 * frame2.width, y: frame2.minY + 0.22689 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.49232 * frame2.width, y: frame2.minY + 0.22689 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.49930 * frame2.width, y: frame2.minY + 0.26931 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.31337 * frame2.width, y: frame2.minY + 0.26931 * frame2.height))
        bezier137Path.line(to: NSPoint(x: frame2.minX + 0.28129 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier137Path.close()
        darkKPink.setFill()
        bezier137Path.fill()


        //// Bezier 138 Drawing
        let bezier138Path = NSBezierPath()
        bezier138Path.move(to: NSPoint(x: frame2.minX + 0.29677 * frame2.width, y: frame2.minY + 0.26892 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.20984 * frame2.width, y: frame2.minY + 0.26892 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.12154 * frame2.width, y: frame2.minY + 0.18015 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.09968 * frame2.width, y: frame2.minY + 0.18015 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.11456 * frame2.width, y: frame2.minY + 0.26892 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.03229 * frame2.width, y: frame2.minY + 0.26892 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.00022 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.08248 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.09412 * frame2.width, y: frame2.minY + 0.14637 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.11550 * frame2.width, y: frame2.minY + 0.14637 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.17916 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.26747 * frame2.width, y: frame2.minY + 0.07331 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.18987 * frame2.width, y: frame2.minY + 0.16326 * frame2.height))
        bezier138Path.line(to: NSPoint(x: frame2.minX + 0.29677 * frame2.width, y: frame2.minY + 0.26892 * frame2.height))
        bezier138Path.close()
        darkKPink.setFill()
        bezier138Path.fill()


        //// Bezier 139 Drawing
        let bezier139Path = NSBezierPath()
        bezier139Path.move(to: NSPoint(x: frame2.minX + 0.91437 * frame2.width, y: frame2.minY + 0.16801 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.86741 * frame2.width, y: frame2.minY + 0.10556 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.90647 * frame2.width, y: frame2.minY + 0.11656 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.90135 * frame2.width, y: frame2.minY + 0.10556 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.84186 * frame2.width, y: frame2.minY + 0.16801 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.83394 * frame2.width, y: frame2.minY + 0.10556 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.83348 * frame2.width, y: frame2.minY + 0.11656 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.88739 * frame2.width, y: frame2.minY + 0.23166 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.85022 * frame2.width, y: frame2.minY + 0.21987 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.85439 * frame2.width, y: frame2.minY + 0.23166 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.91437 * frame2.width, y: frame2.minY + 0.16801 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.92132 * frame2.width, y: frame2.minY + 0.23166 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.92364 * frame2.width, y: frame2.minY + 0.22144 * frame2.height))
        bezier139Path.close()
        bezier139Path.move(to: NSPoint(x: frame2.minX + 0.89391 * frame2.width, y: frame2.minY + 0.26976 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.75911 * frame2.width, y: frame2.minY + 0.16801 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.79259 * frame2.width, y: frame2.minY + 0.26976 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.77213 * frame2.width, y: frame2.minY + 0.24854 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.86046 * frame2.width, y: frame2.minY + 0.06628 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.74658 * frame2.width, y: frame2.minY + 0.08946 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.75774 * frame2.width, y: frame2.minY + 0.06628 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.99617 * frame2.width, y: frame2.minY + 0.16801 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 0.96361 * frame2.width, y: frame2.minY + 0.06628 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.98361 * frame2.width, y: frame2.minY + 0.08907 * frame2.height))
        bezier139Path.curve(to: NSPoint(x: frame2.minX + 0.89391 * frame2.width, y: frame2.minY + 0.26976 * frame2.height), controlPoint1: NSPoint(x: frame2.minX + 1.00916 * frame2.width, y: frame2.minY + 0.24697 * frame2.height), controlPoint2: NSPoint(x: frame2.minX + 0.99617 * frame2.width, y: frame2.minY + 0.26976 * frame2.height))
        bezier139Path.close()
        darkKPink.setFill()
        bezier139Path.fill()


        //// Bezier 140 Drawing
        let bezier140Path = NSBezierPath()
        bezier140Path.move(to: NSPoint(x: frame2.minX + 0.69760 * frame2.width, y: frame2.minY + 0.26932 * frame2.height))
        bezier140Path.line(to: NSPoint(x: frame2.minX + 0.58461 * frame2.width, y: frame2.minY + 0.06445 * frame2.height))
        bezier140Path.line(to: NSPoint(x: frame2.minX + 0.54970 * frame2.width, y: frame2.minY + 0.00118 * frame2.height))
        bezier140Path.line(to: NSPoint(x: frame2.minX + 0.62341 * frame2.width, y: frame2.minY + 0.00118 * frame2.height))
        bezier140Path.line(to: NSPoint(x: frame2.minX + 0.78291 * frame2.width, y: frame2.minY + 0.26932 * frame2.height))
        bezier140Path.line(to: NSPoint(x: frame2.minX + 0.69760 * frame2.width, y: frame2.minY + 0.26932 * frame2.height))
        bezier140Path.close()
        darkKPink.setFill()
        bezier140Path.fill()


        //// Bezier 141 Drawing
        let bezier141Path = NSBezierPath()
        bezier141Path.move(to: NSPoint(x: frame2.minX + 0.58849 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.55863 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.51040 * frame2.width, y: frame2.minY + 0.26933 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.59852 * frame2.width, y: frame2.minY + 0.26933 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.62113 * frame2.width, y: frame2.minY + 0.13511 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.62156 * frame2.width, y: frame2.minY + 0.13588 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.62216 * frame2.width, y: frame2.minY + 0.13251 * frame2.height))
        bezier141Path.line(to: NSPoint(x: frame2.minX + 0.58849 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier141Path.close()
        midKPink.setFill()
        bezier141Path.fill()


        //// Bezier 142 Drawing
        let bezier142Path = NSBezierPath()
        bezier142Path.move(to: NSPoint(x: frame2.minX + 0.63270 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier142Path.line(to: NSPoint(x: frame2.minX + 0.58849 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier142Path.line(to: NSPoint(x: frame2.minX + 0.62216 * frame2.width, y: frame2.minY + 0.13251 * frame2.height))
        bezier142Path.line(to: NSPoint(x: frame2.minX + 0.63270 * frame2.width, y: frame2.minY + 0.07148 * frame2.height))
        bezier142Path.close()
        darkKPink.setFill()
        bezier142Path.fill()
    }

}
